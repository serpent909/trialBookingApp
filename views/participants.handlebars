<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Participants</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
  <link rel="stylesheet" href="/css/form.css">
  <link rel="stylesheet" href="/css/table.css">
  <style>
    td {
      cursor: pointer;
      transition: background-color 0.2s;
    }

    td:hover {
      background-color: #4287F5;
    }
  </style>
</head>

<body>
  <h1>Participants</h1>

  <table>
    <thead>
      <tr>
        <th>Participant ID</th>
        <th>Appointment 1</th>
        <th>Appointment 2</th>
        <th>Appointment 3</th>
        <th>Appointment 4</th>
        <th>Appointment 5</th>
        <th>Appointment 6</th>
        <th>Appointment 7</th>
        <th>Appointment 8</th>
      </tr>
    </thead>
    <tbody>
      {{#each arrangedData}}
      <tr>
        <td>{{participantId}}</td>
        {{#each appointments}}
        <td data-participant-id="{{../participantId}}" data-appointment-number="{{indexPlusOne @index}}"
          data-appointment-id="{{this.appointmentId}}" class="{{#if this.startTime}}booked{{else}}open{{/if}}">
          {{#if this.startTime}}
          {{formatTime this.startTime}}
          {{/if}}
        </td>
        {{/each}}
      </tr>
      {{/each}}
    </tbody>
  </table>

  <!-- The booking form, hidden inside a modal -->
  <div id="booking-modal" style="display: none;">
    <form action="/appointments" method="POST" id="appointmentForm">
      <label for="participant_id">Participant ID:</label>
      <select id="participant_id" name="participant_id" required>
        <option value="">Select Participant</option>
        {{#each participant_ids}}
        <option value="{{this}}">{{this}}</option>
        {{/each}}
      </select>

      <label for="researcher_id">Researcher ID:</label>
      <select id="researcher_id" name="researcher_id" required>
        <option value="">Select Researcher</option>
        {{#each researcher_ids}}
        <option value="{{id}}">{{name}}</option>
        {{/each}}
      </select>

      <label for="psychologist_id">Psychologist ID:</label>
      <select id="psychologist_id" name="psychologist_id">
        <option value="">Select Psychologist</option>
        {{#each psychologist_ids}}
        <option value="{{id}}">{{name}}</option>
        {{/each}}
      </select>

      <label for="room_id">Room ID:</label>
      <select id="room_id" name="room_id" required>
        <option value="">Select Room</option>
        {{#each room_ids}}
        <option value="{{id}}">{{name}}</option>
        {{/each}}
      </select>

      <label for="appointment_number">Appointment Number:</label>
      <select id="appointment_number" name="appointment_number" required>
        <option value="">Select Appointment Number</option>
        {{#each appointment_numbers}}
        <option value="{{this}}">{{this}}</option>
        {{/each}}
      </select>

      <label for="unformatted_start_time">Start Time:</label>
      <input type="datetime-local" id="unformatted_start_time" name="unformatted_start_time" required>


      <label for="multiple_appointments" style="display: none;">Book Remaining Appointments?</label>
      <select id="multiple_appointments" name="multiple_appointments" style="display: none;" required>
        <option value="false" selected="selected">No</option>
        <option value="true">Yes</option>
      </select>


      <input type="hidden" id="start_time" name="start_time">

      <button type="submit">Book Appointment</button>
    </form>
  </div>

  <!-- The existing booking modal, hidden inside a modal -->
  <div id="existing-booking-modal" style="display: none;">
    <!-- Details of the existing booking -->
    <p id="existing-booking-details"></p>
    <p id="existing-booking-id"></p>
    <button onclick="closeExistingModal()">Close</button>
    <button onclick="deleteAppointment()">Delete Appointment</button>
  </div>

  <div id="overlay"></div>

  <script>

    function openModal() {
      document.getElementById('booking-modal').style.display = 'block';
      document.getElementById('overlay').style.display = 'block';
    }

    function closeModal() {
      document.getElementById('booking-modal').style.display = 'none';
      document.getElementById('overlay').style.display = 'none';
    }

    // Close function for the existing booking modal
    function closeExistingModal() {
      document.getElementById('existing-booking-modal').style.display = 'none';
      document.getElementById('overlay').style.display = 'none';
    }

    function deleteAppointment() {
      let appointmentIdElement = document.getElementById('existing-booking-id');
      let appointmentToDeleteId = appointmentIdElement.textContent.split(': ')[1];

      fetch('/appointments/' + appointmentToDeleteId, {
        method: 'DELETE',
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          console.log('Success:', data);
          closeExistingModal();
          window.location.reload(); // reload the page to reflect changes
        })
        .catch((error) => {
          alert('There was an error. Please try again.');
        });
    }

    // Cell click event listener
    document.querySelectorAll('td').forEach((td) => {
      td.addEventListener('click', function () {

        const participantId = this.dataset.participantId;
        const appointmentNumber = this.dataset.appointmentNumber;
        const appointmentId = this.dataset.appointmentId;
        const startTime = this.textContent.trim();

        if (startTime) {
          // Hide booking modal in case it's displayed
          document.getElementById('booking-modal').style.display = 'none';
          document.getElementById('existing-booking-details').textContent = 'Appointment at ' + startTime;
          document.getElementById('existing-booking-id').textContent = 'Appointment ID: ' + appointmentId
          document.getElementById('existing-booking-modal').style.display = 'block';
          document.getElementById('overlay').style.display = 'block';
        } else {
          // Hide existing booking modal in case it's displayed
          document.getElementById('existing-booking-modal').style.display = 'none';
          document.getElementById('participant_id').value = participantId;
          document.getElementById('appointment_number').value = appointmentNumber;
          openModal();
        }

        const multipleAppointmentsLabel = document.querySelector('label[for="multiple_appointments"]');
        const multipleAppointmentsSelect = document.getElementById('multiple_appointments');


        if (appointmentNumber >= 3) {
          multipleAppointmentsLabel.style.display = 'block';
          multipleAppointmentsSelect.style.display = 'block';
        } else {
          multipleAppointmentsLabel.style.display = 'none';
          multipleAppointmentsSelect.style.display = 'none';
        }
      });
    });

    document.getElementById('overlay').addEventListener('click', closeModal);
    document.getElementById('overlay').addEventListener('click', closeExistingModal);


    const form = document.getElementById('appointmentForm');
    const startInput = document.getElementById('unformatted_start_time');
    const formattedStartInput = document.getElementById('start_time');
    const multipleAppointments = document.getElementById('multiple_appointments')

    form.addEventListener('submit', function (event) {
      event.preventDefault();
      formattedStartInput.value = moment(startInput.value).format('YYYY-MM-DD HH:mm:ss');

      const formData = new FormData(this);
      fetch('/appointments', {
        method: 'POST',
        body: JSON.stringify(Object.fromEntries(formData)),
        headers: {
          'Content-Type': 'application/json'
        }
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.statusText;
        })
        .then(data => {
          console.log(data);
          closeModal();
          window.location.href = "/participants";
        })
        .catch((error) => {
          console.error('Error:', error);
          alert('There was an error. Please try again.');
        });
    });
  </script>
</body>

</html>